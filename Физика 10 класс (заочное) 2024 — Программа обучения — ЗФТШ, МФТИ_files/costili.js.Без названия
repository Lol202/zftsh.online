/* задержка перед появлением анимации загрузки в милисекундах. В случае, если ответ на ajax-запрос будет получен раньше,
 чем через указанное время, то не будет произодиться ненужная манипуляция с DOM */
var ajax_loader_latensy = 350;
var VK_API_VERSION = "5.89";

var CIRILIC_PATTERN = /[\u0410-\u044f\u0451\u0401]+/; //[А-яёЁ]+
var LATIN_PATTERN = /[A-z]+/;
var LOGIN_PATTERN = /^[\w\-]{5,32}$/;
var NOT_LOGIN_PATTERN = /[\W]+/;
var PASSWORD_PATTERN = /^[\w\!@#\$\%\^\&\*\(\)\.\;\:\,\-\+]{6,32}$/;
var NOT_PASSWORD_PATTERN = /[^(\w\!@#\$\%\^\&\*\(\)\.\;\:\,\-\+)]+/;
var CAPTCHA_PATTERN = /^[-\w.,\+]+\s{1}[-\w.,\+]+$/;
var EMAIL_PATTERN = /^[^@\+]+@[^@\+]+\.{1}[^@]{2,}$/;
var USERNAME_PATTERN = /^[A-z]{1}[A-z0-9]{3,63}$/;
var NUMBER_PATTERN = /[\d]+/;
var BIRTDATE_PATTERN = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)[\d]{2}$/;
var MOBILEPHONE_PATTERN = /^[\+]{1}([\d]+[\-]?[\d]+)+$/;
var COUNTRY_PATTERN = /^[-A-zА-яёЁ0-9\s]+$/;
var BACKSPACE_KEY_CODE = 8;
var TAB_KEY_CODE = 9;
var ENTER_KEY_CODE = 13;
var SHIFT_KEY_CODE = 16;
var CTRL_KEY_CODE = 17;
var ALT_KEY_CODE = 18;
var ESC_KEY_CODE = 27;
var SPACE_KEY_CODE = 32;
var PAGE_UP_KEY_CODE = 33;
var PAGE_DOWN_KEY_CODE = 34;
var END_KEY_CODE = 35;
var HOME_KEY_CODE = 36;
var DELETE_KEY_CODE = 46;
var LEFT_KEY_CODE = 37;
var UP_KEY_CODE = 38;
var RIGTH_KEY_CODE = 39;
var DOWN_KEY_CODE = 40;
var F1_KEY_CODE = 112;
var F2_KEY_CODE = 113;
var F3_KEY_CODE = 114;
var F4_KEY_CODE = 115;
var F5_KEY_CODE = 116;
var F6_KEY_CODE = 117;
var F7_KEY_CODE = 118;
var F8_KEY_CODE = 119;
var F9_KEY_CODE = 120;
var F10_KEY_CODE = 121;
var F11_KEY_CODE = 122;
var F12_KEY_CODE = 123;
var PRINT_SCREEN_KEY_CODE = 154;

var TERMS_URL = "/help/terms/text/";
if(!window.CONST_TITLE) window.CONST_TITLE = {};
if (!window.locale){
    locale = en4.core.language.options.locale;
}
if (locale.indexOf("ru")==0){
    locale = "ru";
}
if (locale != "ru") {
    CONST_TITLE.LOADING_TITLE = "Loading ...";
    CONST_TITLE.WAIT_TITLE = "Please, wait";
    CONST_TITLE.CLOSE_LOAD_WINDOW = "Close (Esc)";
    CONST_TITLE.CHANGE_LAYOUT_TITLE = "change input language";
    CONST_TITLE.INVALID_CHARACTERS = "invalid characters";
    CONST_TITLE.ERR_NOTICE_GENERAL = "Error!";
} else {
    CONST_TITLE.LOADING_TITLE = "Загрузка ... ";
    CONST_TITLE.WAIT_TITLE = "Пожалуйста, подождите";
    CONST_TITLE.CLOSE_LOAD_WINDOW = "Закрыть (Esc)";
    CONST_TITLE.CHANGE_LAYOUT_TITLE = "смените раскладку";
    CONST_TITLE.INVALID_CHARACTERS = "недопустимые символы";
    CONST_TITLE.ERR_NOTICE_GENERAL = "Произошла ошибка!";
}
var FORM_ERROR_COLOR = "rgb(249,220,220)";
var AJAX_LOADER_SRC = "https://" + (window.location.host ? window.location.host : 'abitu.net') + "/application/modules/Core/externals/images/loading.gif";
var AJAX_LOADER_TAG = "<img class=\"ajax_loader_tag\" height=\"16\" src=\""+AJAX_LOADER_SRC+"\" title=\"" + CONST_TITLE.LOADING_TITLE + "\" width=\"16\"/>";
var AJAX_LOADER_BAR_SRC = "https://" + (window.location.host ? window.location.host : 'abitu.net') + "/application/modules/Core/externals/images/progress_gray_inv.gif";
var AJAX_LOADER_CLASS = "ajax_loader_tag";
var AJAX_LOADER_ELEMENT = document.createElement("img");
var ajax_loader_for_block = document.createElement("img");
var ajax_loader_bar = document.createElement("img");
AJAX_LOADER_ELEMENT.className = ajax_loader_for_block.className = AJAX_LOADER_CLASS;
AJAX_LOADER_ELEMENT.setAttribute("alt", CONST_TITLE.LOADING_TITLE);
AJAX_LOADER_ELEMENT.setAttribute("height", "16");
AJAX_LOADER_ELEMENT.setAttribute("src", AJAX_LOADER_SRC);
AJAX_LOADER_ELEMENT.setAttribute("title", CONST_TITLE.LOADING_TITLE);
AJAX_LOADER_ELEMENT.setAttribute("width", "16");

ajax_loader_for_block.setAttribute("alt", CONST_TITLE.LOADING_TITLE);
ajax_loader_for_block.setAttribute("height", "16");
ajax_loader_for_block.setAttribute("src", AJAX_LOADER_SRC);
ajax_loader_for_block.setAttribute("title", CONST_TITLE.LOADING_TITLE);
ajax_loader_for_block.setAttribute("width", "16");

ajax_loader_bar.setAttribute("alt", CONST_TITLE.LOADING_TITLE);
ajax_loader_bar.setAttribute("height", "16");
ajax_loader_bar.setAttribute("src", AJAX_LOADER_BAR_SRC);
ajax_loader_bar.setAttribute("title", CONST_TITLE.LOADING_TITLE);
ajax_loader_bar.setAttribute("width", "165");

var AJAX_LOADER_BLOCK = document.createElement("div");
AJAX_LOADER_BLOCK.className = "AJAX_LOADER_BLOCK";


var ajax_title_for_block = document.createTextNode(" " + CONST_TITLE.LOADING_TITLE);

AJAX_LOADER_BLOCK.appendChild(ajax_loader_for_block);
AJAX_LOADER_BLOCK.appendChild(ajax_title_for_block);
///////////////////
var AJAX_LOADER_BAR_BLOCK = document.createElement("div");
AJAX_LOADER_BAR_BLOCK.className = "AJAX_LOADER_BLOCK";
AJAX_LOADER_BAR_BLOCK.appendChild(ajax_loader_bar);

function getLoaderBar() {
    var element, element_image;
    element = document.createElement("div");
    element.className = "AJAX_LOADER_BLOCK";
    element_image = document.createElement("img");
    element_image.setAttribute("alt", CONST_TITLE.LOADING_TITLE);
    element_image.setAttribute("height", "16");
    element_image.setAttribute("src", AJAX_LOADER_BAR_SRC);
    element_image.setAttribute("title", CONST_TITLE.LOADING_TITLE);
    element_image.setAttribute("width", "165");
    element.appendChild(element_image);
    return element;
}

function getLoaderImg(type) {
    var element;

    element = document.createElement("img");
    element.setAttribute("alt", CONST_TITLE.LOADING_TITLE);
    element.setAttribute("title", CONST_TITLE.LOADING_TITLE);

    switch(type) {
        case "gray": {
            element.setAttribute("height", "16");
            element.setAttribute("src", "/application/modules/Core/externals/images/progress_gray_inv.gif");
            element.setAttribute("width", "165");
        }
        break;

        case "standart": {
            element.setAttribute("height", "8");
            element.setAttribute("src", "/application/modules/Core/externals/images/loader_standart.gif");
            element.setAttribute("width", "149");
        }
        break;

        case "micro": {
            element.setAttribute("height", "4");
            element.setAttribute("src", "/application/modules/Core/externals/images/loader_micro.gif");
            element.setAttribute("width", "16");
        }
        break;

        case "small":
        default: {
            element.className = "bar_loader_small";
            element.setAttribute("height", "8");
            element.setAttribute("src", "/application/modules/Event/externals/images/upload.gif");
            element.setAttribute("width", "32");
        }
    }

    return element;
}

var NOTICE_REMOVE_TIME_GENERAL = 6000;

var NOMINATIVE = 0; //именительный падеж
var GENETIVE = 1; //родительный падеж
var DATIVE = 2; //дательный падеж
var ACCUSATIVE = 3; //винительный падеж
var INSTRUMENTAL = 4; //творительный падеж
var ABLATIVE = 5; //предложный падеж

var pageVerifiedTimerId;
var pageVerifiedHideTimerId;
var pageVerifiedTipMoving;


var pageTrueNameTipMoving;
var pageTrueNameTimerId;
var pageTrueNameHideTimerId;

function pageVerifiedTipShow() {
    var ver_tip = document.getElementById("verified_tip") || document.getElementsByClassName("verified_tip").item(0);
    clearTimeout(pageVerifiedHideTimerId);

    var current_margin = 15;

    function tipMarginFrame(elem) {
        elem.style["margin-top"] = current_margin + "px";
        current_margin--;
        if (current_margin === 5) {
            current_margin = 15;
            clearInterval(pageVerifiedTipMoving);
        }
    }

    if (ver_tip !== null) {
        if (ver_tip.style.display === "none") {
            ver_tip.style.display = "";
            pageVerifiedTipMoving = setInterval(function () {
                tipMarginFrame(ver_tip);
            }, 20);
            ver_tip.style.left = (parseInt(document.getElementsByClassName('checked_verified')[0].offsetLeft) - 215) + "px";
        }

        ver_tip.getElementsByTagName("i")[0].style.left = "212px";
    }
    else {
        var verified_tip = document.createElement("div");
        var verified_tip_triangle = document.createElement("i");
        var verified_tip_title = document.createElement("h5");
        var verified_tip_description = document.createTextNode("Данная отметка означает, что страница этого пользователя была подтверждена администрацией Abitu.Net");

        verified_tip.id = "verified_tip";
        verified_tip.onmouseover = pageVerifiedTipShow;
        verified_tip.onmouseout = pageVerifiedTipHide;

        verified_tip_triangle.className = "triangle_top";
        verified_tip_triangle.style.left = "212px";

        verified_tip_title.textContent = "Подтверждённая страница";

        verified_tip.appendChild(verified_tip_triangle);
        verified_tip.appendChild(verified_tip_title);
        verified_tip.appendChild(verified_tip_description);
        verified_tip.style.left = (parseInt(document.getElementsByClassName('checked_verified')[0].offsetLeft) - 215) + "px";

        document.getElementsByClassName('checked_verified')[0].parentNode.appendChild(verified_tip);
        pageVerifiedTipMoving = setInterval(function () {
            tipMarginFrame(verified_tip);
        }, 20);

    }

}


function pageVerifiedTipHide() {
    var ver_tip = document.getElementById("verified_tip") || document.getElementsByClassName("verified_tip").item(0);
    pageVerifiedHideTimerId = setTimeout(function () {
        var opacity = 100;

        function frame(elem) {
            elem.style.opacity = opacity / 100;
            opacity -= 5;
            if (opacity === 0) {
                clearInterval(pageVerifiedTimerId);
                elem.style.opacity = "1";
                elem.style.display = "none";
                elem.style["margin-top"] = "15px";
            }
        }

        if (ver_tip !== null)
            if (ver_tip.style.display !== "none") {
                var pageVerifiedTimerId = setInterval(function () {
                    frame(ver_tip);
                }, 20);
            }
    }, 1000);
}

///////////////////////////////////////////////////////////////////////////////////////

function pageTrueNameTipShow() {
    var current_margin, field_half_width, field_half_heigth, tip_half_heigth, tipMarginFrame, ver_tip;

    clearTimeout(pageTrueNameHideTimerId);

    current_margin = 10;
    tipMarginFrame = function tipMarginFrame(elem) {
        current_margin--;
        elem.style["margin-left"] = current_margin + "px";
        if (current_margin === 0) {
            current_margin = 10;
            clearInterval(pageTrueNameTipMoving);
        }
    }

    field_half_width = 103;
    field_half_heigth = 11;
    tip_half_heigth = 114;

    ver_tip = document.getElementById("verified_tip") || document.getElementsByClassName("verified_tip").item(0);

    if (ver_tip !== null && ver_tip.style.display === "none") {
        ver_tip.style.display = "";
        pageTrueNameTipMoving = setInterval(function () {
            tipMarginFrame(ver_tip);
        }, 15);


        ver_tip.style.left = 210 + field_half_width * 2 + 17 + "px";
        var name_field_id;
        if (locale === "ru") {
            name_field_id = "first_name";
        }
        else {
            name_field_id = "middle_name";
        }

        ver_tip.style.top = document.getElementById(name_field_id).offsetTop - tip_half_heigth + field_half_heigth + 40 + "px";
        ver_tip.getElementsByTagName("i")[0].style.top = parseInt(ver_tip.offsetHeight / 2 - 3) + "px";
    }
}

function pageTrueNameTipHide() {
    var ver_tip = document.getElementById("verified_tip") || document.getElementsByClassName("verified_tip").item(0);

    pageTrueNameHideTimerId = setTimeout(function () {
        var opacity = 100;

        function frame(elem) {
            elem.style.opacity = opacity / 100;
            opacity -= 5;
            if (opacity === 0) {
                clearInterval(pageVerifiedTimerId);
                elem.style.opacity = "1";
                elem.style.display = "none";
                elem.style["margin-left"] = "10px";
            }
        }

        if (ver_tip !== null) {
            if (ver_tip.style.display !== "none") {
                var pageVerifiedTimerId = setInterval(function () {
                    frame(ver_tip);
                }, 20);
            }
        }
    }, 1000);
}

function checkPasswordLayout(element) {
    var password_correct_elem;

    if (NOT_PASSWORD_PATTERN.test(element.value)) {
        if (document.getElementById("password_correct") === null) {
            password_correct_elem = document.createElement("p");
            password_correct_elem.className = "description password_correct";
            password_correct_elem.id = "password_correct";
            JSinsertAfter(password_correct_elem, element);
        }
        else {
            password_correct_elem = document.getElementById("password_correct");
        }

        if (CIRILIC_PATTERN.test(element.value)) {
            elementRewrite(password_correct_elem, CONST_TITLE.CHANGE_LAYOUT_TITLE);
        }
        else {
            elementRewrite(password_correct_elem, CONST_TITLE.INVALID_CHARACTERS);
        }
    }
    else if (document.getElementById("password_correct") !== null) {
        document.getElementById("password_correct").parentNode.removeChild(document.getElementById("password_correct"));
    }
}

function JSinsertAfter(elem, refElem) {
    var parent = refElem.parentNode;
    var next = refElem.nextSibling;
    if (next) {
        return parent.insertBefore(elem, next);
    }
    else {
        return parent.appendChild(elem);
    }
}

function load_window_open() {
    if (document.getElementById("load_window") !== null) {
        elementShow(document.getElementById("load_window"));
        if (document.getElementById("load_window_title") === null) {
            var load_window_title = document.createElement("h4");
            load_window_title.id = "load_window_title";
            load_window_title.textContent = CONST_TITLE.LOADING_TITLE;
            document.getElementById("load_window").appendChild(load_window_title);
        }
        else {
            elementRewrite(document.getElementById("load_window_title"), CONST_TITLE.LOADING_TITLE);
        }

        if (document.getElementById("load_window_text") === null) {
            var load_window_content = document.createElement("p");
            load_window_content.id = "load_window_text";
            var load_window_label = document.createTextNode(" " + CONST_TITLE.LOADING_TITLE + " " + CONST_TITLE.WAIT_TITLE);
            load_window_content.appendChild(AJAX_LOADER_ELEMENT);
            load_window_content.appendChild(load_window_label);
            document.getElementById("load_window").appendChild(load_window_content);
        }
        else {
            elementRewrite(document.getElementById("load_window_text"), AJAX_LOADER_TAG + " " + CONST_TITLE.LOADING_TITLE + " " + CONST_TITLE.WAIT_TITLE);
        }
    }
    else {
        var load_window_element = document.createElement("div");
        load_window_element.id = "load_window";

        var load_window_title = document.createElement("h4");
        load_window_title.id = "load_window_title";
        load_window_title.textContent = CONST_TITLE.LOADING_TITLE;

        var load_window_content = document.createElement("p");
        load_window_content.id = "load_window_text";
        var load_window_label = document.createTextNode(" " + CONST_TITLE.LOADING_TITLE + " " + CONST_TITLE.WAIT_TITLE);
        load_window_content.appendChild(AJAX_LOADER_ELEMENT);
        load_window_content.appendChild(load_window_label);

        var load_window_close_button = document.createElement("div");
        load_window_close_button.id = "load_window_close";
        load_window_close_button.onclick = load_window_close;
        load_window_close_button.textContent = "×";
        load_window_close_button.title = CONST_TITLE.CLOSE_LOAD_WINDOW;

        load_window_element.appendChild(load_window_title);
        load_window_element.appendChild(load_window_content);
        load_window_element.appendChild(load_window_close_button);

        document.body.insertBefore(load_window_element, document.body.firstChild);
    }
}

function load_window_close() {
    if (document.getElementById("load_window") !== null && document.getElementById("load_window") !== undefined) {
        elementHide(document.getElementById("load_window"));
        elementRewrite(document.getElementById("load_window_title"), CONST_TITLE.LOADING_TITLE);
    }
    if (!en4.isMobile) {
        elementRewrite(document.getElementById("load_window_text"), AJAX_LOADER_TAG + " " + CONST_TITLE.LOADING_TITLE + " " + CONST_TITLE.WAIT_TITLE);
    }
}

function telephoneCodeListToggle(element) {
    if (document.getElementsByClassName("telephone-code-list") !== null && document.getElementsByClassName("telephone-code-list") !== undefined) {
        if (element.parentNode.getElementsByTagName("input") !== null && element.parentNode.getElementsByTagName("input") !== undefined) {
            element.parentNode.getElementsByTagName("input")[0].focus();
        }
        var codeList = document.getElementsByClassName("telephone-code-list")[0];
        if (codeList.style.display === "none") {
            codeList.style.display = "";
            if (codeList.getElementsByClassName("hover")[0] === undefined) {
                codeList.getElementsByTagName("li")[0].className += " hover";
            }
        }
        else {
            codeList.style.display = "none";
        }
    }
}

function removeClass(obj, cls) {
    if (obj === null || obj === undefined) {
        return false;
    }

    var classes = obj.className.split(" ");

    for (var i = 0; i < classes.length; i++) {
        if (classes[i] === cls) {
            classes.splice(i, 1); // удалить класс  
            i--;
        }
    }
    obj.className = classes.join(" ");
}

function setCapitalLetter(a) {
    return "" === a ? !1 : a[0].toUpperCase() + a.substring(1, a.length).toLowerCase();
}
;


function namesTextchange(b) {
    var a = b.value;
    a.match(/\s{2,}/) && (a = a.replace(/\s{2,}/g, " "));
    a.match(/\-{2,}/) && (a = a.replace(/[-]{2,}/g, "-"));
    a.match(/\-{1}\s{1}/) && (a = a.replace(/\-{1}\s{1}/g, "-"));
    a.match(/\s{1}\-{1}/) && (a = a.replace(/\s{1}\-{1}/g, "-"));
    a.match(/^[-\s]/) && (a = a.replace(/^[-\s]/, ""));
    a.match(/[^-A-z\u0410-\u044f\u0451\u0401\s]/) && (a = a.replace(/[^-A-z\u0410-\u044f\u0451\u0401\s]/g, ""));
    a.match(/^[a-z\u0430-\u044f\u0451]/) ? b.value = setCapitalLetter(a) : a.substring(1, a.length).
        match(/[A-Z\u0410-\u042f\u0401]/) ?
        b.value = setCapitalLetter(a) : b.value = a;
}
;

function phonesTextchange(element) {
    var current_value = element.value;
    if (current_value.substring(1, current_value.length).match(/\+{1,}/)) {
        current_value = current_value[0] + current_value.substring(1, current_value.length).replace(/[\+]{1,}/g, "");
    }

    if (current_value.match(/\s{2,}/)) {
        current_value = current_value.replace(/\s{2,}/g, " ");
    }

    if (current_value.match(/[\+]{2,}/g)) {
        current_value = current_value.replace(/[\+]{2,}/g, "+");
    }

    if (current_value.match(/\-{2,}/)) {
        current_value = current_value.replace(/[-]{2,}/g, "-");
    }

    if (current_value.match(/\-{1}\s{1}/)) {
        current_value = current_value.replace(/\-{1}\s{1}/g, "-");
    }

    if (current_value.match(/\s{1}\-{1}/)) {
        current_value = current_value.replace(/\s{1}\-{1}/g, "-");
    }

    if (current_value.match(/^[-\s]/)) {
        current_value = current_value.replace(/^[-\s]/, "");
    }

    if (current_value.match(/[^0-9-\s\+]/)) {
        current_value = current_value.replace(/[^0-9-\s\+]/g, "");
    }

    if (current_value[0] === "+" && current_value.substring(1, current_value.length).match(/^[^0-9]{1}/)) {
        current_value = current_value[0] + current_value.substring(2, current_value.length);
    }

    if (current_value.match(/^[\+]{1}[-\s]{1}/)) {
        current_value = current_value.replace(/[\+]{1}[-\s]{1}/g, "+");
    }

    element.value = current_value;
}


function numbersTextchange() {
    //В поля с input[type="number"] можно вводить только цифры
    var current_value = this.value;
    var current_maxlength = +this.getAttribute("data-maxlength");

    if (current_maxlength > 0 && current_value.length > current_maxlength) {
        current_value = current_value.substr(0, current_maxlength);
    }

    if (this.getAttribute("data-type") === "float" && current_value.match(/[^0-9\.]/)) {
        current_value = current_value.replace(/[^0-9\.]/g, "");
    }
    else if (current_value.match(/[^0-9]/)) {
        current_value = current_value.replace(/[^0-9]/g, "");
    }


    this.value = current_value;
}

function numbersBlur() {
    var current_max_value = this.getAttribute("max");
    var current_min_value = this.getAttribute("min");
    if (this.value > +current_max_value && current_max_value !== null)
        this.value = String(current_max_value);
    else if (this.value < +current_min_value && this.value !== "" && current_min_value !== null)
        this.value = String(current_min_value);
}

function elementShow(element) {
    if (element !== null && element !== undefined) {
        if (element.style.display === "none")
            element.style.display = "";
    }
}

function elementHide(element) {
    if (element !== null && element !== undefined) {
        if (element.style.display !== "none")
            element.style.display = "none";
    }
}

function elementRewrite(element, content) {
    if (element !== null && element !== undefined) {
        if (element.innerHTML !== content)
            element.innerHTML = content;
    }
}

function elementValueRewrite(element, value) {
    if (element !== null && element !== undefined) {
        if (element.value !== value)
            element.value = value;
    }
}

function fieldRewrite(field, value) {
    if (field.value !== value)
        field.value = value;
}

function trim(s) {
    return !s ? '' : rtrim(ltrim(s));
}

function ltrim(s) {
    return !s ? '' : s.replace(/^\s+/, "");
}

function rtrim(s) {
    return !s ? '' : s.replace(/\s+$/, "");
}

function declension(w, p, x, v, q, A) {
    "ru" === A ? (q = String(Math.floor(q)), v = parseInt(q.charAt(q.length - 1)), q = parseInt(q.charAt(q.length - 2) + q.charAt(q.length - 1)), w = 1 === v && 11 !== q ? w : 2 !== v && 3 !== v && 4 !== v || 12 === q || 13 === q || 14 === q ? x : p) : w = v;
    return w;
}

function backlightItem(element) {
    var hover_elements = element.parentNode.parentNode.getElementsByClassName("hover");
    for (var i = 0; i < hover_elements.length; i++) {
        removeClass(hover_elements[i], "hover");
    }
    element.className += " hover";
}

function selectCountryCode(field_id, element) {
    if (element.getElementsByTagName("i") !== null && element.getElementsByTagName("i") !== undefined) {
        var new_value = element.getElementsByTagName("i")[0].innerHTML;
       
        if (new_value== '+370' || new_value== '+371' /*латвия литва - 8 цифр*/) {
            new_value += "-___-___-__";
        }else if (['+91', '+86'].includes(new_value)){
            new_value += "-___-___-_____";
        }else if (new_value.length === 2 || element.getElementsByTagName("i")[0].innerHTML.length === 3) {
            new_value += "-___-___-__-__";
        }else if (new_value.length === 4) {
            new_value += "-__-___-__-__";
        }

        elementValueRewrite(document.getElementById(field_id), new_value);
        if (document.getElementById(field_id).value.indexOf("_") !== -1) {
            setCaretPosition(document.getElementById(field_id), document.getElementById(field_id).value.indexOf("_"));
        }
    }
    var tFlag = document.getElementsByClassName("telephone-flag");
    if (tFlag.length && element.getElementsByTagName("span") !== null && element.getElementsByTagName("span") !== undefined) {
        tFlag[0].className = "telephone-flag " + element.getElementsByTagName("span")[0].className;
        var countryValueEl = tFlag[0].parentNode.querySelector("input[type=hidden][name$=country]");
        var countryLabel =  element.querySelector('.phoneCountryPopupLabel');
        if (countryLabel){
			var cnShort = element.querySelector("span").getAttribute("class");
			if (cnShort=='other')
            {
                elementValueRewrite(document.getElementById(field_id), '+');
				countryValueEl.value = '';
            }else{
				countryValueEl.value = countryLabel.hasAttribute('data-value') ? countryLabel.getAttribute('data-value') : countryLabel.innerHTML;
			}
            
            countryValueEl.setAttribute("short", cnShort);
            
        }
    }
    elementHide(element.parentNode.parentNode);
    setTimeout(function () {
        var element_phone_one, element_phone_two;
        element_phone_one = document.getElementById("phone");
        element_phone_two = document.getElementById("mobilephone");

        if (element_phone_one !== null) {
            element_phone_one.focus();
        }
        else if (element_phone_two !== null) {
            element_phone_two.focus();
        }
    }, 50);

    return false;
}

function getCaretPosition(elem) {
    var caretPos = 0;

    if (document.selection) { // ie
        elem.focus();
        var range = document.selection.createRange();
        elem.moveStart('character', -elem.value.length);
        caretPos = range.text.length;
    }
    else if (elem.selectionStart || elem.selectionStart == '0') {
        // Mozilla
        caretPos = elem.selectionStart;
    }

    return caretPos;
}

function setCaretPosition(elem, caretPos) {
    if (document.selection) { // ie
        elem.focus();
        var range = document.selection.createRange();
        range.moveStart('character', -elem.value.length);
        range.moveStart('character', caretPos);
        range.moveEnd('character', 0);
        range.select();
    }
    else if (elem.selectionStart || elem.selectionStart == '0') { // Mozilla
        elem.selectionStart = caretPos;
        elem.selectionEnd = caretPos;
        elem.focus();
    }
}

window.addEventListener("load", phoneFieldCheck, false);
window.addEventListener("keydown", keydownGeneral, false);


function keydownGeneral(event) {
    switch (event.which) {
        case ESC_KEY_CODE:
        {
            document.activeElement.blur();
            load_window_close();
        }
            break;
    }
}

function phoneFieldCheck() {
    if (document.getElementsByClassName("telephone-code-list")[0] !== null && document.getElementsByClassName("telephone-code-list")[0] !== undefined) {
        if ("addEventListener" in window) {
            window.addEventListener("keypress", telephoneCodeListKeydown, false);
        }
        else if ("attachEvent" in window) {
            window.attachEvent("onkeypress", telephoneCodeListKeydown);
        }

        document.getElementsByClassName("telephone-code-list")[0].parentNode.getElementsByTagName("input")[0].onkeydown = function (event) {
            var cnHidden = this.parentNode.querySelector("input[type=hidden][name$=country]");
            if (cnHidden && cnHidden.getAttribute("short")=='other'){
                return;
            }
            if (event !== null && event !== undefined)
                switch (event.which) {
                    case TAB_KEY_CODE:
                    case SHIFT_KEY_CODE:
                    case CTRL_KEY_CODE:
                    case ALT_KEY_CODE:
                    case ESC_KEY_CODE:
                    case LEFT_KEY_CODE:
                    case RIGTH_KEY_CODE:
                    case PAGE_UP_KEY_CODE:
                    case PAGE_DOWN_KEY_CODE:
                    case END_KEY_CODE:
                    case HOME_KEY_CODE:
                    case F1_KEY_CODE:
                    case F2_KEY_CODE:
                    case F3_KEY_CODE:
                    case F4_KEY_CODE:
                    case F5_KEY_CODE:
                    case F6_KEY_CODE:
                    case F7_KEY_CODE:
                    case F8_KEY_CODE:
                    case F9_KEY_CODE:
                    case F10_KEY_CODE:
                    case F11_KEY_CODE:
                    case F12_KEY_CODE:
                    case PRINT_SCREEN_KEY_CODE:
                    {
                        return true;
                    }
                        break;

                    case DOWN_KEY_CODE:
                    {
                        if (document.getElementsByClassName("telephone-code-list") !== null && document.getElementsByClassName("telephone-code-list") !== undefined) {
                            if (document.getElementsByClassName("telephone-code-list")[0].style.display === "none" && document.getElementsByClassName("telephone-flag") !== null && document.getElementsByClassName("telephone-flag") !== undefined) {
                                telephoneCodeListToggle(document.getElementsByClassName("telephone-flag")[0]);
                                return false;
                            }
                        }
                    }
                        break;

                    case DELETE_KEY_CODE:
                    {
                        var country_code_position = this.value.indexOf("+");

                        var current_caret_position = getCaretPosition(this);
                        var current_symbol = this.value[current_caret_position];
                        if (country_code_position < current_caret_position && current_caret_position < this.value.length) {
                            if (/[0-9]/.test(current_symbol)) {
                                this.value = this.value.substr(0, current_caret_position)
                                + "_" + this.value.substr(current_caret_position + 1);
                                current_caret_position++;
                                setCaretPosition(this, current_caret_position);
                            }
                            else if (/[0-9]/.test(this.value[current_caret_position + 1])) {
                                this.value = this.value.substr(0, current_caret_position + 1)
                                + "_" + this.value.substr(current_caret_position + 2);
                                current_caret_position++;
                                current_caret_position++;
                                setCaretPosition(this, current_caret_position);
                            }

                        }
                        return false;
                    }
                        break;

                    case BACKSPACE_KEY_CODE:
                    {
                        var country_code_position = this.value.indexOf("+");
                        this.value = this.value.substr(0, country_code_position) + (this.value.substr(country_code_position).split("").reverse().join("").replace(/[0-9]/, '_')).split("").reverse().join("");

                        var current_caret_position;
                        if (this.value.indexOf("_") !== -1) {
                            current_caret_position = this.value.indexOf("_");
                        }
                        else {
                            current_caret_position = +getCaretPosition(this) - 1;
                        }

                        setCaretPosition(this, current_caret_position);
                        return false;
                    }
                        break;

                    case 48: //0
                    case 49: //1
                    case 50: //2
                    case 51: //3
                    case 52: //4
                    case 53: //5
                    case 54: //6
                    case 55: //7
                    case 56: //8
                    case 57: //9    
                    {
                        this.value = this.value.replace(/_/, String.fromCharCode(event.which));
                        if (this.value.indexOf("_") !== -1) {
                            setCaretPosition(this, this.value.indexOf("_"));
                        }
                        return false;
                    }
                        break;

                    //NumPad
                    case 96: //0
                    case 97: //1
                    case 98: //2
                    case 99: //3
                    case 100: //4
                    case 101: //5
                    case 102: //6
                    case 103: //7
                    case 104: //8
                    case 105: //9
                    {
                        this.value = this.value.replace(/_/, String(-(96 - event.which)));
                        if (this.value.indexOf("_") !== -1) {
                            setCaretPosition(this, this.value.indexOf("_"));
                        }
                        return false;
                    }
                        break;

                    default:
                        return false;
                }
        };

        document.getElementsByClassName("telephone-code-list")[0].parentNode.getElementsByTagName("input")[0].onblur = function () {
            if (document.getElementsByClassName("telephone-code-list") !== null && document.getElementsByClassName("telephone-code-list") !== undefined) {
                for (var i = 0; i < document.getElementsByClassName("telephone-code-list").length; i++) {
                    elementHide(document.getElementsByClassName("telephone-code-list")[i]);
                }
            }
        };

        document.getElementsByClassName("telephone-code-list")[0].parentNode.getElementsByTagName("input")[0].onpaste = function () {
            return false;
        };
    }
}

function telephoneCodeListKeydown(event) {
    if (event !== null && event !== undefined)
        switch (event.which) {
            case ESC_KEY_CODE:
            {
                if (document.getElementsByClassName("telephone-code-list") !== null && document.getElementsByClassName("telephone-code-list") !== undefined) {
                    for (var i = 0; i < document.getElementsByClassName("telephone-code-list").length; i++) {
                        elementHide(document.getElementsByClassName("telephone-code-list")[i]);
                    }
                }
                document.activeElement.blur();
            }
                break;
            case ENTER_KEY_CODE:
            {
                if (document.getElementsByClassName("telephone-code-list") !== null && document.getElementsByClassName("telephone-code-list") !== undefined) {
                    for (var i = 0; i < document.getElementsByClassName("telephone-code-list").length; i++) {
                        if (document.getElementsByClassName("telephone-code-list")[i].style.display !== "none") {
                            if (document.getElementsByClassName("telephone-code-list")[i].getElementsByClassName("hover")[0] === undefined) {
                                document.getElementsByClassName("telephone-code-list")[i].getElementsByTagName("li")[0].onmousedown();
                            }
                            else {
                                document.getElementsByClassName("telephone-code-list")[i].getElementsByClassName("hover")[0].onmousedown();
                            }
                            return false;
                        }
                    }

                }
            }
                break;

            case DOWN_KEY_CODE:
            {
                if (document.getElementsByClassName("telephone-code-list") !== null && document.getElementsByClassName("telephone-code-list") !== undefined) {
                    if (document.getElementsByClassName("telephone-code-list")[0].style.display !== "none") {
                        if (document.getElementsByClassName("telephone-code-list")[0].getElementsByClassName("hover")[0] !== undefined) {
                            var telephone_codes = document.getElementsByClassName("telephone-code-list")[0].getElementsByTagName("li");

                            for (var k = 0; k < telephone_codes.length - 1; k++) {
                                if (/hover/.test(telephone_codes[k].className)) {
                                    removeClass(telephone_codes[k], "hover");
                                    if (!/hover/.test(telephone_codes[k + 1].className)) {
                                        telephone_codes[k + 1].className += " hover";
                                    }

                                    var srroll_value = telephone_codes[k + 1].offsetTop - document.getElementsByClassName('telephone-code-list')[0].scrollTop - 260;
                                    if (srroll_value >= 0) {
                                        srroll_value += 26;
                                        document.getElementsByClassName('telephone-code-list')[0].scrollTop += srroll_value;
                                    }
                                    break;
                                }
                            }
                        }
                        else {
                            document.getElementsByClassName("telephone-code-list")[0].getElementsByTagName("li")[0].className += " hover";
                        }
                        return false;
                    }
                }
            }
                break;

            case UP_KEY_CODE:
            {
                if (document.getElementsByClassName("telephone-code-list") !== null && document.getElementsByClassName("telephone-code-list") !== undefined) {
                    for (var i = 0; i < document.getElementsByClassName("telephone-code-list").length; i++) {
                        if (document.getElementsByClassName("telephone-code-list")[i].style.display !== "none") {
                            if (document.getElementsByClassName("telephone-code-list")[i].getElementsByClassName("hover")[0] !== undefined) {
                                var telephone_codes = document.getElementsByClassName("telephone-code-list")[i].getElementsByTagName("li");

                                for (var k = 1; k < telephone_codes.length; k++) {
                                    if (/hover/.test(telephone_codes[k].className)) {
                                        removeClass(telephone_codes[k], "hover");
                                        if (!/hover/.test(telephone_codes[k - 1].className)) {
                                            telephone_codes[k - 1].className += " hover";
                                        }

                                        var srroll_value = telephone_codes[k].offsetTop - document.getElementsByClassName('telephone-code-list')[0].scrollTop - 26;
                                        if (srroll_value < 0) {
                                            //srroll_value -= 26;
                                            document.getElementsByClassName('telephone-code-list')[0].scrollTop += srroll_value;
                                        }
                                        break;
                                    }
                                }
                            }
                            else {
                                document.getElementsByClassName("telephone-code-list")[i].getElementsByTagName("li")[0].className += " hover";
                            }
                            return false;
                        }
                    }
                }
            }
                break;
            default:
                return false;
        }
}

function successNoticeGeneral(container, success_message) {
    var success_notification = document.createElement("ul");
    var success_text = document.createElement("li");
    success_notification.className = "form-notices";
    success_text.textContent = success_message;
    success_notification.appendChild(success_text);
    //Если контейнер не задан, то сообщение отображается в центре/на краю экрана
    if (container === null || container === undefined) {
        container = document.body;
        success_notification.className += " form-screen";
        container.appendChild(success_notification);
        success_notification.style.top = "50%";
        success_notification.style["margin-left"] = Math.floor(document.body.clientWidth/2 - success_notification.offsetWidth / 2) + "px";
    }
    else {
        container.insertBefore(success_notification, container.firstChild);
        container.scrollIntoView();
    }


    setTimeout(function () {
        if (success_notification !== null && success_notification !== undefined && success_notification.parentNode !== null && success_notification.parentNode !== undefined) {
            success_notification.parentNode.removeChild(success_notification);
        }
    }, NOTICE_REMOVE_TIME_GENERAL);
}

function errorNoticeGeneral(container, error_message) {
    var error_notification = document.createElement("ul");
    var error_text = document.createElement("li");
    error_notification.className = "form-errors";
    error_text.textContent = error_message;
    error_notification.appendChild(error_text);
    
    if (!container) {
        container = document.body;
        error_notification.className += " form-screen";
        container.appendChild(error_notification);
        error_notification.style.top = "50%";
        error_notification.style["margin-left"] = Math.floor(document.body.clientWidth/2 - error_notification.offsetWidth / 2) + "px";
    }else{
        container.insertBefore(error_notification, container.firstChild);
        container.scrollIntoView();
    }
    
    setTimeout(function () {
        if (error_notification !== null && error_notification !== undefined) {
            container.removeChild(error_notification);
        }
    }, NOTICE_REMOVE_TIME_GENERAL);
}

function recur_rotation(b, c, d, a) {
    if (6 > a)
        return setTimeout(function () {
            d.setAttribute("src", "/application/modules/User/externals/images/user/next" + (a + 1) + ".gif")
        }, b + c * a), recur_rotation(b, c, d, a + 1);
    setTimeout(function () {
        d.setAttribute("src", "/application/modules/User/externals/images/user/next1.gif")
    }, b + c * a)
}
;

function ajax_loader_remove() {
    if (AJAX_LOADER_ELEMENT.parentNode !== null) {
        AJAX_LOADER_ELEMENT.parentNode.removeChild(AJAX_LOADER_ELEMENT);
    }
}

//////////////////// NEW 

var captcha_input_notification_timeout;
function yandexCaptchaOnInput() {
    if (/[^0-9]+/.test(this.value)) {
        clearTimeout(captcha_input_notification_timeout);
        if (document.getElementById("captcha_input_notification") === null) {
            var captcha_input_notification = document.createElement("div");
            captcha_input_notification.id = "captcha_input_notification";
            captcha_input_notification.appendChild(document.createElement("i"));
            captcha_input_notification.appendChild(document.createTextNode("Вы можете вводить только цифры"));
            document.getElementById("load_window").insertBefore(captcha_input_notification, this);
        }
        else {
            elementShow(document.getElementById("captcha_input_notification"));

            while (document.getElementById("captcha_input_notification").lastChild) {
                document.getElementById("captcha_input_notification").removeChild(document.getElementById("captcha_input_notification").lastChild);
            }

            captcha_input_notification.appendChild(document.createElement("i"));
            captcha_input_notification.appendChild(document.createTextNode("Вы можете вводить только цифры"));
        }

        captcha_input_notification_timeout = setTimeout(function () {
            elementHide(document.getElementById("captcha_input_notification"));
        }, 3500);
        this.value = this.value.replace(/[^0-9]+/g, "");
    }
}

function yandexCaptchaReload() {
    try {
        var xhr = new XMLHttpRequest();
        var request_url = "/help/newcaptcha/";
        var captcha_image;
        if (document.getElementById("yandex_captcha_image") === null) {
            captcha_image = document.createElement("img");

            captcha_image.setAttribute("alt", "Защита от спама");
            captcha_image.className = "yandex_captcha";
            captcha_image.height = "60";
            captcha_image.id = "yandex_captcha_image";
            captcha_image.title = "Введите символы с картинки";
            captcha_image.onclick = function () {
                if (document.getElementById("yandex_captcha_field") === null) {
                    return false;
                }
                document.getElementById("yandex_captcha_field").focus();
            };
            captcha_image.width = "200";

            document.getElementById("load_window").insertBefore(captcha_image, document.getElementById("yandex_captcha_field"));
        }
        else {
            captcha_image = document.getElementById("yandex_captcha_image");
        }

        var request_code = captcha_image.getAttribute("data-request-code");
        if (request_code !== undefined && request_code !== null && request_code !== "") {
            request_url += "?request_code=" + request_code;
        }

        xhr.open("GET", request_url, true);
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");


        recur_rotation(0, 50, document.getElementById("captcha_reload_pic"), 1);
        recur_rotation(300, 50, document.getElementById("captcha_reload_pic"), 1);

        xhr.onreadystatechange = function () {
            if (xhr.readyState !== 4)
                return;

            if (xhr.status !== 200) //Error
            {
                load_window_close();
                elementRewrite(document.getElementById("load_window_title"), "");
                var load_window_error_notice = document.createElement("span");
                load_window_error_notice.className = "fail";
                load_window_error_notice.textContent = CONST_TITLE.REGISTRATION_ERROR;
                elementRewrite(document.getElementById("load_window_text"), "");
                document.getElementById("load_window_text").appendChild(load_window_error_notice);
                return;
            }

            var response = JSON.parse(xhr.responseText);

            captcha_image.src = response.captcha_url;
            captcha_image.setAttribute("data-code", response.captcha_code);
            captcha_image.setAttribute("data-request-code", response.request_code);

            document.getElementById("yandex_captcha_field").setAttribute("data-code", response.captcha_code);
            document.getElementById("yandex_captcha_field").setAttribute("data-request-code", response.request_code);
            document.getElementById("yandex_captcha_field").value = "";
            document.getElementById("yandex_captcha_field").focus();

        };
        xhr.send("");
    }
    catch (exeption) {
        console.error(exception.name + ", " + exception.message);
        errorNoticeGeneral(container, CONST_TITLE.ERR_NOTICE_GENERAL + " " + exception.name + ", " + exception.message);
    }
}

function regexpEscape(text) {
    return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
}

function __loginAsUser() {
    var id = prompt("Введите ID пользователя, под которым хотите перелогиниться", "1");
    if (id != null && id != "") {
        if (!confirm('Внимание, при нажатии OK текущий аккаунт выйдет из системы.')) {
            return;
        }
        var relogUrl = '/admin/user/manage/login';
        var isReauth = jQuery('[data-reauth]').data('reauth');
        if (!isReauth){
            Smoothbox.open('//' + document.location.host + relogUrl + '/id/' + id);
            return;
        }

        jQuery.ajax({
            "url" : relogUrl,
            "method": "POST",
            'data' : {
                format: 'json',
                id: id
            },
            "dataType": "json",
        }).success(function() {
            window.location.reload();
        }).fail(function() {
            alert('Простите, но произошла ошибка, попробуйте обновить страницу.');
        });
    }
}

/*goncharov 2015-10-05 : FORM DECORATION SCRIPTING */
var initFormDecoration = function(where)
{
    if (!where) where = {find:jQuery};
    /*Active label highlighting script*/
    var activeCheck = function(el){
        var label;

	   label = where.find('label[for='+el.attr('id')+']');
		if (!label.length){
			label = el.next('label');
			if (!label.length) label = el.prev('label');
		}
		
       if (label.length && el.is(':checked')){
           label.addClass('active');
       }else{
           label.removeClass('active');
       }
    };


        where.find('.global_form input[type=checkbox]').each(function(){
            try{
                var jqEl = jQuery(this);
                activeCheck(jqEl);
                jqEl.change(function(){ activeCheck(jqEl); })
            }catch(e){ console.log(e);}
        });

    /*audience - move schoolers class to schoolers option*/
    var scoolersElements = where.find('#audience_grade_min-wrapper, #audience_grade_max-wrapper');
    if (scoolersElements.length){
        where.find('#audience_grade_min-label').replaceWith('&nbsp;&nbsp;&nbsp;<span>от &nbsp;&nbsp;</span>');
        where.find('#audience_grade_max-label').replaceWith('<span>до&nbsp;&nbsp;&nbsp;</span>');
        where.find('#audience-schoolboy').parent().append(scoolersElements).append('<span>классов</span>');
    }
};

var initMenuClicking = function()
{
    /*Click on menu LI clicks to LI child A*/
    jQuery('.bl-content-inner-menu li:not[data-no-auto-click]').each(function(){
        jQuery(this).click(function(e){
            if ( (typeof e.target.tagName != 'undefined') && e.target.tagName.toLowerCase() !='a' ){
                var link = jQuery(this).find('a:first');
                if (link.hasClass('smoothbox')){
                    Smoothbox.open(link[0]);
                }else if (link.is('a') && link.attr('href').indexOf('javascript')==-1){
                    document.location.href = link.attr('href');
                }else{
                    link.click();
                }
            }
        });
    });
};

var initDisableScrollInputNumber = function(containers){
	/*Disable scroll on number inputs*/
	var $ = jQuery;
	containers.on('focus', 'input[type=number]', function (e) {
        $(this).on('DOMMouseScroll.disableScroll mousewheel.disableScroll', function (e) {
            e.preventDefault();
        })
    });
    containers.on('blur', 'input[type=number]', function (e) {
        $(this).off('DOMMouseScroll.disableScroll mousewheel.disableScroll')
    });
};

jQuery.ajaxSetup({cache:true});
jQuery(document).ready(function(){
    try{
        initFormDecoration();
        initMenuClicking();
		initDisableScrollInputNumber(jQuery('form'));
    }catch(e){/*silence*/}
});

/*Fix a bug with anchor scrolling (section with hidden overflow choosed for scroll)*/
jQuery(function(){
    var repairScroll = function() {
        var bugScrollContainer = jQuery('#global_wrapper');
        if (bugScrollContainer.length && bugScrollContainer[0].scrollTop > 10){
            var gcScroll = bugScrollContainer[0].scrollTop;
            bugScrollContainer[0].scrollTop = 0;
            window.scrollTo(0, gcScroll);
            setTimeout(function() {
                window.scrollTo(0, gcScroll);
            }, 200);
        }
    };
    repairScroll();
    setTimeout(repairScroll, 500);
    setTimeout(repairScroll, 1000);
    setTimeout(repairScroll, 1500);
    setTimeout(repairScroll, 2500);
});

/*Fix a bug with vertical container, cause it has fixed position*/
//.tabs_vertical_anchors
jQuery(function($){
    let fixedMenu = $('.tabs_vertical_anchors');
    if (fixedMenu.length && fixedMenu.is(':visible')){
        let updatePadding = function(){
            $('#global_header_container').css('padding-top', fixedMenu.innerHeight() + 'px');
        };
        $(window).resize(updatePadding);
        updatePadding();
    }
});

/*Hide password plugin*/
var HidePasswordOptionsStandart = {
    show: 'infer',
    innerToggle: true,
    toggle: {
        element: '<A class="fa fa-eye" href="javascript:void(0);"></A>',
    },
    states: {
        shown: {
            className: 'hideShowPassword-shown',
            changeEvent: 'passwordShown',
            props: { type: 'text' },
            toggle: {
                className: 'fa-eye-slash',
                content: '',
                attr: {
                    'aria-pressed': 'true',
                    title: 'Скрыть пароль',
                }
            }
        },
        hidden: {
            className: 'hideShowPassword-hidden',
            changeEvent: 'passwordHidden',
            props: { type: 'password' },
            toggle: {
                className: 'fa-eye',
                content: '',
                attr: {
                    'aria-pressed': 'false',
                    title: 'Показать пароль',
                }
            }
        }
    }
};

/*fix cooks PHPSESID dublication*/
jQuery(function($){
    let cookNow = document.cookie;
    if (cookNow.split('PHPSESSID=').length > 2){
        let chunks = window.location.pathname.split('/');
        let collect = [''];
        for(let i=1;i<chunks.length;i++){
            collect.push(chunks[i]);
            document.cookie = 'PHPSESSID=; path='+collect.join('/')+'; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        }
        if (chunks.length > 1){
            window.location.reload();
        }
    }
});
/**/